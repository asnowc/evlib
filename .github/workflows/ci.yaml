name: CI
on:
  push:
    branches:
      - main
      - develop
env:
  ARTIFACT_NAME: dist
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        node-version: [18, 20]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: asnowc/actions@setup-node/v2
        with:
          node_v: ${{matrix.node-version}}
          pnpm_v: 8
          run_install: true
      - name: Build
        run: pnpm ci:build
      - name: Unit test
        run: pnpm ci:test
      - name: Check api
        if: ${{matrix.node-version==20 && github.ref_name=='main'}}
        run: pnpm ci:api-extractor
      - name: Setup Deno
        if: ${{matrix.node-version==20 && github.ref_name=='main'}}
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Check tags
        if: ${{matrix.node-version==20 && github.ref_name=='main'}}
        uses: asnowc/actions@deno-script/v1
        id: check_tags
        with:
          script: |
            import { writeNewTagsToOutput } from "https://cdn.jsdelivr.net/gh/dnpack/action-script@0.3.x/cmd/github_repo.ts";
            import { getWorkspaceTagMap } from "https://cdn.jsdelivr.net/gh/dnpack/action-script@0.3.x/cmd/package.ts";

            const tagMap = await getWorkspaceTagMap();
            const tags = Object.keys(tagMap);
            await writeNewTagsToOutput(tags, "return");
          args: -A
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish
        if: ${{steps.check_tags.outputs.return}}
        uses: asnowc/actions@deno-script/v1
        with:
          script: |
            import { tagsPublishFlow } from "https://cdn.jsdelivr.net/gh/dnpack/action-script@0.3.x/cmd/github_repo.ts";
            import { execCmdSync } from "https://cdn.jsdelivr.net/gh/dnpack/action-script@0.3.x/lib.ts";

            await tagsPublishFlow("NEW_TAGS", () => execCmdSync("pnpm", ["publish", "-r"], { exitIfFail: true }));
          args: -A
        env:
          NEW_TAGS: ${{steps.check_tags.outputs.return}}
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
